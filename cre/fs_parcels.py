import fs_datatools
import os 

#given a type/use decode column, output a new column containing a more general category to be displayed to users. Meant to be an apply function.
def classify_general_type(in_str):
    types = {
        "UNKNOWN" : ["NAN"],
        "PARKING/MISC":["COM PARKING GARAGEDECK","CONCESS","LR CONVEYANCE REF ONLY","PUB PKDK","SPECIAL WRITEIN","COM PARKING LOTSSURFACE"],
        "RETAIL" : ["AUTO CW","BARCLUB","BOWLING","BULK RET","C0M LRG RETAIL OUTLET","CAFETERI","CAR SALES","CLUB","CMNTY SVC ABC STORES","COM AREA SHOP CTRS","COM AUTO BODYTIRE","COM AUTO CAR WASH","COM AUTO DLRSLS  SVC","COM BAR","COM CONV STORE W GAS","COM CONV STORE WO GAS","COM DINERS  LUNCH","COM DINING ESTABLISHMNT","COM DINING LEASEHOLD","COM DLRSHIP SLS  SVC","COM DRIVEIN BANK","COM FAST FOOD","COM FUNERAL HOME","COM GASFUELOIL STG","COM LRG RETAIL FOOD ST","COM MANUAL CAR WASH","COM MISC SERVICES","COM MISC SVC LEASEHOLD","COM MOTOR VEHICLE SVCS","COM NIGHT CLUBS","COM REGIONAL SHOP CTRS","COM RESTAURANTS","COM RETAIL SERVICES","COM SELFSER CAR WASH","COM SNACK BARS","COM SVC  GAS STATION","COM VET CLINIC","COMM SC","DAY CARE","DEPT STR","DISC STR","DRUGSTOR","FASTFOOD","FOODMART","FUNERAL","GAS ONLY","JR ANCH","JR DEPT","KENNEL","LAUNDRY","NBHD SC","PHARM","REG MALL","REST  HM","RESTAURA","SALESER","SER GARG","SERV STA","STORAPT","SUPR MKT","VET CLIN","WAND CW"],
        "HOSPITALITY":["COM HOTEL","COM INNSBBRM HOUSE","COM MOTEL","HMES","HMFULL","HMHR","HMLIMT","HMLUX"],
        "VACANT/AGR" :["AG AGRICULTURAL UNDIFF","AG OTHER LIVESTOCK","AG YEARROUND","PRESENTUSEAGRICULTURAL","VAC AG 10 ACRES OR ","VAC AG OTHER RURAL","VAC AG PART OF FARM","VAC AG TMBR 20 ACRES  ","VAC AG W NONLVG IMPVS","VAC COM CONDO ASSOC","VAC COM DEVELOPER","VAC COM W LEASEHOLD","VAC COMM SVC GRVL PRK LT","VAC COMM SVC W LSHLD","VAC IND W LEASEHOLD","VAC PRV UTL SEWAGE SITE","VAC PRV UTL WELL SITE","VAC PU W LEASEHOLD","VAC RES  10 ACRES","VAC RES DEVELOPER","VAC RES HOMEOWNERS ASSOC","VAC RES LOTSML TRACT","VAC RES LOTSML TRREAR","VAC RES LOTSML TRSIDE","VAC RES RURAL  10 ACRES","VAC RES UNDERWATER LANDS","VAC RES W LEASEHOLD","VAC RES W SML IMPROV","VAC URBAN RENEWAL","VACANT COMMERCIAL","VACANT COMMUNITY SERVICE","VACANT INDUSTRIAL","VACANT LAND UNDIFF","VACANT PRIVATE UTILITY","VACANT PUBLIC UTILITY","VACCONSERVATION EASEMNT","AG 1FAMILY","AG 1MH OR MH SITE","AG 2MH OR MH SITES","AG MOBILE HOME","VACANT","ACRE WITH IMPROVEMENT, NO HOUSE","AGRICULTURE"],
        "OFFICE":["BANK BLD","BIOLOGY","CMNTY SVC PROF ASSOC","COM 1STY SM MULTI USER","COM 1STY SM SGL USER","COM BANK  OFFICE LSHLD","COM BANK W OFFICE","COM BANKS  OFFICES","COM COMMERCIAL UNDIFF","COM CONVERTED RESIDENCE","COM DISTRIB LEASEHOLD","COM DWNTWN ROWATTACHED","COM DWNTWN ROWDETACHED","COM HOMEOWNERS ASSOC IMP","COM OFFICE BLDG","COM OFFICE CONDO","COM PROFESSIONAL BLDG","COM RET SVS LEASEHOLD","COM STANDARD BANK","COM W LEASEHOLD","COMRMHSE","DI BANK","HR OFFC","IND PHARMACEUTICALHLTH","LABRATRY","MED OFC GROSS","OFC GROSS","PUBL SVC COMMUNICATION","PUBL SVC MISCELLANEOUS","PUBL SVC RADIO","PUBL SVC TELEVISION","PUBL SVC TV NOT COMM","REC TV  RADIO STUDIO","RESEARCH","SNGL TEN"],
        "SINGLEFAM":["COM MOBILE HOME PARK","GUARDHSE","MOBILE","PREFAB","RES 1FAMILY","RES 1FAMILY S42","RES 1MH OR MH SITE","RES 2MH OR MH SITES","RES DWG  1MBL HM","RES DWG  2MBL HMS","RES ESTATE","RES HISTORICAL","RES MOBILE HOME","RES PATIO HOME W LAND","RES RESIDENTIAL UNDIFF","RES RURAL RES W ACREAGE","RES SEASONAL 1FAMILY","RES TOWNHOUSE W LAND","RES TOWNHOUSE W LND S42","RESRMHSE","SINGLFAM","RESIDENTIAL LESS THAN 10 ACRES","MANUFACTURED HOME","MOBILE HOME PARK","HISTORIC","ACRES GREATER THAN 10 WITH HOUSE"],
        "MULTIFAM":["AG 2FAMILY","AG MULTIPLE DWGS","CLUB HSE","COM APARTMENTDWG CONV","COM APARTMENTGARDEN","COM APARTMENTGARDEN S42","COM APARTMENTHIGH RISE","COM LIVING ACCOMM","COM LIVING ACCOMN S42","DORMTY","ELEV APT","FOURFAM","FRATRNTY","GRDN APT","GROUP HM","LUX APT","MUTFAM","RES 2FAMILY","RES 2FAMILY S42","RES 3FAMILY","RES 4FAMILY","RES 4FAMILY S42","RES CONDOMINIUM","RES CONDOPUD W LAND","RES CONV","RES HOMEOWNERS ASSOC IMP","RES LSHLD IMPROV","RES MULTIPLE DWGS","SORORITY","STUDENT","THREEFAM","THSE APT","TWOFAM","CONDO COMPLEX","RETIREMENT HOME","APARTMENT","CONDOMINIUM"],
        "INDUSTRIAL":["BOT PLNT","BULKDIST","CHEM PLN","CMNTY SVC CORRECTIONAL","COM COLD STG FACILITIES","COM MINIWAREHOUSES","COM SALVAGE YARD","COM TRUCKING TERMINALS","COM WHSESTORAGE","FLEX WHSE","HANGER","HMINDE","IND BIOTECH  BIOPHARM","IND ENVIRONMENTAL SCI","IND INDUSTRIAL UNDIFF","IND INFO TECH  TELCOMM","IND MANUF LEASEHOLD","IND MANUFPROCESSING","IND MATERIALS SCIENCE","IND MICROELECTRONICS","IND MINING  QUARRY","IND MISC RESEARCH","IND W LEASEHOLD","LT MANUF","MANUF","MINIWHSE","OIL CHG","POWER HS","PUBL SVC COMM CELL SITE","PUBL SVC ELEC TRANSM","PUBL SVC ELECTRIC  GAS","PUBL SVC GAS TRANSM","PUBL SVC LANDFILLS","PUBL SVC RAILROADS","PUBL SVC SEWER  WATER","PUBL SVC SOLID WASTE","PUBL SVC TELEPHONE","PUBL SVC TRANSPORTATION","PUBL SVC WASTE DISPOSAL","PUBL SVC WATER","PUBL SVC WATER SUPPLY","SER GAR PREM","STR BLDG","TEL EXCH","TRK TERM","WAREHSE","INDUSTRIAL"],
        "RECREATION":["ARENA","BATH HSE","CMNTY SVC GOVPRK GARDK","CMNTY SVC RCRTNL FACLTY","DRIVEIN","GYM","O D PARK","REC AMUSEMENT FACILITIES","REC ATHLETIC FIELDS","REC AUD  EXH HALLS","REC BOWLING","REC COUNTRY CLUB","REC ENTRTNAMUSEUNDIFF","REC GOLF COURSE","REC HEALTH SPA","REC INDOOR SKATING","REC INDOOR SPT FACILITY","REC LEGITIMATE THEATER","REC MOTION PIC THEATER","REC OTHER MISC","REC OTHER OUTDOOR SPORT","REC OUTDOOR SPORT ACT","REC OUTDOOR SPT LSHLD","REC OUTDOOR SWIMMING","REC PARKS","REC PLAYGROUNDS","REC SOCIAL ORGANIZATIONS","REC STADARENAFLD HSE","REC YMCA OR YWCA","RESTROOM","SKATERNK","STABLE","THEATRE","WILD PARKS  REC  CNTY","WILD PARKS  REC  FDRL","WILD PARKS  REC  STATE","WILD PUBLIC PARKS","GOLF COURSE"],
        "CIVIC/GOVT" :["ARMORY","CHURCH","CMNTY SVC ANIMAL WELFARE","CMNTY SVC BNVLNT ASSN","CMNTY SVC CEMETERY EXM","CMNTY SVC CEMETERY TAX","CMNTY SVC CHILD DAYCARE","CMNTY SVC CHURCH","CMNTY SVC CHURCH PARK LT","CMNTY SVC CHURCH PARS","CMNTY SVC CHURCH SCHOOL","CMNTY SVC COLLEGE","CMNTY SVC CULTURALREC","CMNTY SVC DCLT LD  IMPV","CMNTY SVC EDUC PARK LOT","CMNTY SVC EDUCATION","CMNTY SVC GOVPUB PRK LT","CMNTY SVC GOVT BLDGS","CMNTY SVC GOVT CENTER","CMNTY SVC GOVT HWY GAR","CMNTY SVC GOVT LSHLD","CMNTY SVC HOME FOR AGED","CMNTY SVC LIBRARY","CMNTY SVC MILITARY BASE","CMNTY SVC MISC","CMNTY SVC MISC LEASEHOLD","CMNTY SVC OTR EDU FACLTY","CMNTY SVC POLICEFIRE","CMNTY SVC RDSSTRPKWY","CMNTY SVC RELIGIOUS","CMNTY SVC SCHOOL","CMNTY SVC SPECIAL SCHLS","CMNTY SVC W LEASEHOLD","CMNTY SVC WELFARE","CMNTY SVS ASSIST LVG S42","CMNTY SVS ASSISTED LVG","COM HISTORICAL","COMMUNITY SVCS UNDIFF","FIRE STA","LIBRARY","MUNC BLD","MUSEUM","POST OFC","PRISON","PUBL SVC MOTOR VEHICLE","PUBLIC SERVICE UNDIFF","SCHOOL"],
        "MIXEDUSE" : ["COM MULTIUSE CAPABLE","COM MULTIUSE CONDO","COM MULTIUSE LEASEHOLD","MULT TEN","OFCAPT","RESBUS","STOFCA","STOROFC"],
        "MEDICAL" : ["CLINIC","CMNTY SVC HEALTH","CMNTY SVC HLTH LSHLD","CMNTY SVC HLTH PARK LOT","CMNTY SVC HOSPITAL","CMNTY SVC OTHER HLTH FAC","HEALTH","HOSPITAL","NURSG HM"],
        "WILDERNESS":["PRESENTUSEFORESTRY","PRESENTUSEHORTICULTURAL","WILD FOREST LAND  FDRL","WILD FOREST LAND  STATE","WILD PARKS  REC  CITY","WILD WETLANDS","WILDFRSTCONS LDUNDIFF","FORESTRY"]
}
    for key in list(types):
        if fs_datatools.clean_specials(str(in_str).upper().strip(),add_keeps=[' '],fix_multispace=0) in types[key] or str(in_str).upper() in types[key]:
            return key
    return "UNKNOWN"

#upin helper function to get rid of null pins
def upin_func(pin,county_name):
    if pin == None or str(pin).upper() == "NAN":
        return "" 
    else:
        return county_name +"_"+ pin
        
#add universal id (county+pin) to csv file or dataframe given the pin number and path (assuming the path is something like NC_Raleigh/blah.csv)
def add_upin(in_obj,pin_col,path,out_filename=""):
    df,dtype =  fs_datatools.load_df_or_csv(in_obj)
    if not 'upin' in list(df.columns):
        df = fs_datatools.clean_index_col(df,pin_col)
        county_name = get_county_from_path(path)
        df['upin'] = df[pin_col].apply(upin_func,args=(county_name,)) 
    
        if out_filename != "":
            df.to_csv(out_filename,index=False)
            print(out_filename,"written with %s upin" % county_name)
        elif dtype == "str":
            df.to_csv(in_obj,index=False)
            print(in_obj,"updated with %s upin" % county_name)
    else:
        print('upin column already in DF.')
    return df
#given a city name, get the county
def get_county(city,state="NC"):
    if state == 'NC':
        parcel_counties = {
            'WAKE' : ['RALEIGH','APEX','WAKE FOREST','HOLLY SPRINGS','FUQUAY VARINA','GARNER','MORRISVILLE','CARY'],
            'DURHAM' : ['DURHAM'],
            'ORANGE' : ['CHAPEL HILL','CARRBORO']
        }
        for key in parcel_counties:
            if city.upper() in parcel_counties[key]:
                return str(key)
    return 'UNKNOWN'

#given a path, like /NC_Raleigh/blah return the county, e.g. NC_WAKE
def get_county_from_path(path):
    result = "UNKNOWN"
    county_path_dict = {
        "NC_WAKE" : ['NC_COUNTY_WAKE','NC_RALEIGH','NC_APEX','NC_WAKEFOREST','NC_HOLLYSPRINGS','NC_FUQUAYVARINA','NC_GARNER','NC_MORRISVILLE','NC_CARY'],
        'NC_DURHAM' : ['NC_DURHAM'],
        'NC_ORANGE' : ['NC_COUNTY_ORANGE','NC_CHAPELHILL','NC_CARRBORO']
    }
    path_split = path.split(os.sep)
    for item in path_split:
        if "_" in item and not "." in item:
            for key in county_path_dict:
                if item.upper() in county_path_dict[key]:
                    result = key
    return result


